const minecraftCommand = require("../../contracts/minecraftCommand.js");
const { getLatestProfile } = require("../../../API/functions/getLatestProfile.js");
const getSkills = require("../../../API/stats/skills.js");
const getDungeons = require("../../../API/stats/dungeons.js");
const { formatUsername } = require("../../contracts/helperFunctions.js");

class BullyMeCommand extends minecraftCommand {
    constructor(minecraft) {
        super(minecraft);

        this.name = "bullyme";
        this.aliases = ["bullymee"];
        this.description = "Bully me if my stats are too low.";
        this.options = [
            {
                name: "username",
                description: "Minecraft username",
                required: false,
            },
        ];

        // Thresholds for each stat
        this.thresholds = {
            mining: 50,
            foraging: 60,
            fishing: 30,
            enchanting: 60,
            alchemy: 40,
            carpentry: 40,
            runecrafting: 20,
            social: 10,
            taming: 50,
        };

        // Array of possible blame messages
        this.blameMessages = [
            "Your ${stat} is too low! Stop being lazy!",
            "You need to work on your ${stat} u monke!",
            "Your ${stat} is not up to par! Get to work!",
            // Add more messages as needed
        ];
    } 

    // Function to get a random blame message
    getRandomBlameMessage(stat) {
        const randomIndex = Math.floor(Math.random() * this.blameMessages.length);
        return this.blameMessages[randomIndex].replace('${stat}', stat);
    }

    async onCommand(username, message) {
        try {
            username = this.getArgs(message)[0] || username;
            console.log(`Username: ${username}`); // Debug: print the username

            const data = await getLatestProfile(username);
            console.log(`Data: ${JSON.stringify(data)}`); // Debug: print the data

            username = formatUsername(data.profileData?.displayname || username);
            console.log(`Formatted Username: ${username}`); // Debug: print the formatted username

            const dungeons = getDungeons(data.playerRes, data.profile);
            console.log(`Dungeons: ${JSON.stringify(dungeons)}`); // Debug: print the dungeons

            const skills = getSkills(data.profile);
            console.log(`Skills: ${JSON.stringify(skills)}`); // Debug: print the skills

            // Check if the user's stats are below the thresholds
            for (let stat in this.thresholds) {
                if (skills[stat] && skills[stat].levelWithProgress < this.thresholds[stat]) {
                    const blameMessage = this.getRandomBlameMessage(stat);
                    console.log(`Blame Message: ${blameMessage}`); // Debug: print the blame message
                    this.send(`/gc ${username}, ${blameMessage}`);
                }
            }
        } catch (error) {
            console.error(`Error: ${error}`); // Debug: print the error
        }
    }
}

module.exports = BullyMeCommand;